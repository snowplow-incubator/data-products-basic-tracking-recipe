import { trackSelfDescribingEvent, CommonEventProperties, SelfDescribingJson } from '@snowplow/browser-tracker';
// Automatically generated by Snowtype

export type TodoAction = {
    /**
     * The action taken for a specific todo item
     */
    action: Action;
}

/**
 * The action taken for a specific todo item
 */
export type Action = "add" | "remove" | "complete";

/**
 * Data Structure for a Todo
 */
export type Todo = {
    /**
     * The title of the Todo
     */
    title: string;
}

/**
 * Creates a Snowplow Event Specification entity.
 */
export function createEventSpecification(eventSpecification: EventSpecification){
    return {
        schema:
            'iglu:com.snowplowanalytics.snowplow/event_specification/jsonschema/1-0-2',
        data: eventSpecification,
    }
}

/**
 * Automatically attached context for event specifications
 */
interface EventSpecification {
    id: string;
    name: string;
    data_product_id: string;
    data_product_name: string;
}

type ContextsOrTimestamp<T = any> = Omit<CommonEventProperties<T>, 'context'> & { context?: SelfDescribingJson<T>[] | null | undefined }
/**
 * Track a Snowplow event for TodoAction.
 * 
 */
export function trackTodoAction<T extends {} = any>(todoAction: TodoAction & ContextsOrTimestamp<T>, trackers?: string[]){
    const { context, timestamp, ...data } = todoAction;
    const event: SelfDescribingJson = {
        schema: 'iglu:com.snplow.sales.aws/todo_action/jsonschema/2-0-0',
        data
    };

    trackSelfDescribingEvent({
        event,
        context,
        timestamp,
    }, trackers);
}

/**
 * Creates a Snowplow TodoAction entity.
 */
export function createTodoAction(todoAction: TodoAction){
    return {
        schema: 'iglu:com.snplow.sales.aws/todo_action/jsonschema/2-0-0',
        data: todoAction
    }
}
/**
 * Track a Snowplow event for Todo.
 * Data Structure for a Todo
 */
export function trackTodo<T extends {} = any>(todo: Todo & ContextsOrTimestamp<T>, trackers?: string[]){
    const { context, timestamp, ...data } = todo;
    const event: SelfDescribingJson = {
        schema: 'iglu:com.snowplow.example/todo/jsonschema/1-0-0',
        data
    };

    trackSelfDescribingEvent({
        event,
        context,
        timestamp,
    }, trackers);
}

/**
 * Creates a Snowplow Todo entity.
 */
export function createTodo(todo: Todo){
    return {
        schema: 'iglu:com.snowplow.example/todo/jsonschema/1-0-0',
        data: todo
    }
}

/**
 * Tracks a RemoveTodo event specification.
 * ID: 160485b0-b469-4ba6-bfc3-ba02798fbcb9
 */
export function trackRemoveTodoSpec(removeTodo: TodoAction & ContextsOrTimestamp, trackers?: string[]){
    const eventSpecificationContext: SelfDescribingJson<EventSpecification> = createEventSpecification({ 
        id: '160485b0-b469-4ba6-bfc3-ba02798fbcb9',
        name: 'Remove todo',
        data_product_id: '2f8db821-9c48-409e-9f65-251314ffdd7b',
        data_product_name: 'Todo - Goals'
    });

    const context = Array.isArray(removeTodo.context)
        ? [...removeTodo.context, eventSpecificationContext]
        : [eventSpecificationContext];

    const modifiedRemoveTodo = {
        ...removeTodo,
        context,
    };

    trackTodoAction<Record<string, unknown> | EventSpecification>(modifiedRemoveTodo, trackers);
}
/**
 * Tracks a AddTodo event specification.
 * ID: 6a7389b1-64e3-40ea-a357-e087219ead3c
 */
export function trackAddTodoSpec(addTodo: TodoAction & ContextsOrTimestamp<Todo>, trackers?: string[]){
    const eventSpecificationContext: SelfDescribingJson<EventSpecification> = createEventSpecification({ 
        id: '6a7389b1-64e3-40ea-a357-e087219ead3c',
        name: 'Add todo',
        data_product_id: '2f8db821-9c48-409e-9f65-251314ffdd7b',
        data_product_name: 'Todo - Goals'
    });

    const context = Array.isArray(addTodo.context)
        ? [...addTodo.context, eventSpecificationContext]
        : [eventSpecificationContext];

    const modifiedAddTodo = {
        ...addTodo,
        context,
    };

    trackTodoAction<Todo | EventSpecification>(modifiedAddTodo, trackers);
}
/**
 * Tracks a CompleteTodo event specification.
 * ID: 7b983b9e-d358-424d-ac9b-c729defcc2e3
 */
export function trackCompleteTodoSpec(completeTodo: TodoAction & ContextsOrTimestamp<Todo>, trackers?: string[]){
    const eventSpecificationContext: SelfDescribingJson<EventSpecification> = createEventSpecification({ 
        id: '7b983b9e-d358-424d-ac9b-c729defcc2e3',
        name: 'Complete todo',
        data_product_id: '2f8db821-9c48-409e-9f65-251314ffdd7b',
        data_product_name: 'Todo - Goals'
    });

    const context = Array.isArray(completeTodo.context)
        ? [...completeTodo.context, eventSpecificationContext]
        : [eventSpecificationContext];

    const modifiedCompleteTodo = {
        ...completeTodo,
        context,
    };

    trackTodoAction<Todo | EventSpecification>(modifiedCompleteTodo, trackers);
}


